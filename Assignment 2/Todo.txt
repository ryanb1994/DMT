
TASKS
-------------------------------------------------------------
-Set up the skeleton of the document - done, sent you an email

-Business understanding

-Start with data exploration

-Exploration similar outcomes


EDA
-------------------------------------------------------------
Ryan:

<<<<<<< HEAD

=======
- Wrote the business understanding with site below from the Chinese University.
- The summer months (July and August) are not in the datasets of training and test set.
- Number of bookings, clicks and searches in months:
  January:    16011,  26596,  607578
  February:   16473,  26332,  593893
  March:      19426,  31368,  700876 
  April:      17952,  28953,  642877
  May:        20078,  31953,  699776 
  June:       21108,  33250,  737391
  July:       0,      0,      0
  August:     0,      0,      0
  September:  0,      0,      0
  October:    0,      0,      0
  November:   13971,  22206,  496217
  December:   13371,  21221,  479739
  
- Made a 3d plot for star vs reviews with bookings. See the "stars_reviews_bookings.py".

- Did write a part on overleaf about dates. That includes promotions tags, clicks, bookings etc.

- I did write code about comparison in stars vs reviews. I will place that in overleaf on 13 may. Further I will check how influence the position of hotel could result bookings. That also will be written in overleaf.

I have put all the composite features and transformations in one csv file (which I upload on github). I did do some classifier tests, but we have to deal with the next problem:

year                             0
month                            0
prop_score                       0
prop_location_score1             0
prop_location_score2             0
diff_hist_price                  0
usd_diff                      2256
star_diff                     2256
srch_query_affinity_score    18732
orig_destination_distance      136
prop_review_score                0
position                         0
price_rank                       0
stars_rank                       0
score_rank                       0
booking_bool                     0
click_bool                       0

The numbers are NAN. For now, I replace it with my classifiers with zero to go further with my part, but that is not the right choice if I check.

Did write about classifiers in Overleaf, but the approach I used with classifiers was checking about clicking and booking. We now have to do the likelihood. See my classifiers as pdf in github.

NEW:

Checked with theory if data is representative. See the notebook and overleaf.

-----------------------------------------------------------------------------------------------------------------------------


Maria:

-Number of unique searches: 199,795
-Number of countries: 172
-Number of hotels: 129,113
-Total nr clicks/Promotion flag clicks: 221,879 / 64,469
-Total nr bookings/Promotion flag bookings 138,390 / 41,947
-Total nr promotion flags: 1,069,118
 NEW: -comparison with competitors



-----------------------------------------------------------------------------------------------------------------------------

Jeffrey:

- Specifically srch_id, adults, children, room, saturday night etc don't have any effect on wether booked or not.
Always around these results. When clicked and booked = 97% change, only clicked not booked = 3% chance, if not clicked never booked.
Not really variables that seem to have a different effect.
0             0               0.971611
              1               0.028389
1             0               1.000000












RELATED WORK
---------------------------------------------------------------

Site I use for 3.1 (Business understanding):

http://citeseer.ist.psu.edu/viewdoc/download;jsessionid=08C03F09F57DE9399581C2C0E54CE589?doi=10.1.1.1019.4846&rep=rep1&type=pdf

Presentations of winners:

https://kaggle2.blob.core.windows.net/competitions/kaggle/3504/media/ICDM2013_Presentations_2013-12-08.zip
---------------------------------------------------------------

>>>>>>> 9f14171ece60ae47f4837f1391d567ea993a3ad0



POSSIBLE FEATURES (Things that could be important for deciding)
---------------------------------------------------------------
-Price -> we have to check for specific dates, since it is more expensive in the summer.
-Number of stars
-Country where property is located
-Children
-Promotion flag

-Adult count
-Site id : Some properties got more booked with different sites (Found one site focussed on children also)
- Visitor location and distance: People book more close by


NEW: a preliminary and basic comparison of feature importance

jeffrey:
https://github.com/gouravshenoy/ExpediaHotelRecommendation



Site LambdaMART:

https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/MSR-TR-2010-82.pdf
https://bitbucket.org/tunystom/rankpy

Site code nDCG:

https://gist.github.com/bwhite/3726239



Link to train file with preprocessing
https://1drv.ms/u/s!AsWuoeNWUWZP7X_FAokenIAZaCGc
Link to test file with preprocessing
https://1drv.ms/u/s!AsWuoeNWUWZP7gA7WR9E4BcbkGma

---------------------------------------------------

df = df[['srch_id', 'position', 'booking_bool', 'click_bool', 'ndcg']]
array_dcg = []
array_idcg = np.empty(0)
temp_idcg = []
sum_dcg = 0
sum_idcg = 0
length_df = len(df)

def dcg(i, rel):
    return (2**rel - 1)/(np.log2(i + 1))

def reverse_numeric(x, y):
    return y - x

for k in range(0, length_df - 1):
    if k != length_df - 1:
        if(df['srch_id'][k] < df['srch_id'][k + 1]):
            # Last sum dcg is busy.
            sum_dcg += dcg(df['position'][k],df['ndcg'][k])
            array_dcg.append(sum_dcg)
            sum_dcg = 0
        else:
            sum_dcg += dcg(df['position'][k],df['ndcg'][k])
    else:
        # Last sum dcg is busy.
        sum_dcg += dcg(df['position'][k],df['ndcg'][k])
        array_dcg.append(sum_dcg)
        sum_dcg = 0
